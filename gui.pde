/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:Graph_Parameters:414613:
  appc.background(230);
} //_CODE_:Graph_Parameters:414613:

public void Graphs(GDropList source, GEvent event) { //_CODE_:Graph_Type:545584:
  graphType = source.getSelectedText(); // set graph type to dropdown string
  loadData();
  redraw(); // refresh graph
} //_CODE_:Graph_Type:545584:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:434790:
  xTitle = source.getText(); // set x-axis title to string
} //_CODE_:textfield1:434790:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:textfield2:472568:
  yTitle = source.getText(); // set y-axis title to string
} //_CODE_:textfield2:472568:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:535333:
  saveFrame("Screenshots/Screenshot " + screenshotNum + ".png"); // take screenshot of main window
  screenshotNum++;
} //_CODE_:button1:535333:

public void textfield3_change1(GTextField source, GEvent event) { //_CODE_:textfield3:493918:
  file = source.getText(); // set file string to load data
  loadData();
} //_CODE_:textfield3:493918:

public void textfield4_change1(GTextField source, GEvent event) { //_CODE_:textfield4:518793:
  try {
    int newSelection = Integer.parseInt(source.getText()) - 1; // set input to integer
    if (newSelection >= 0 && newSelection < lineData.size()) { // check if value is valid
      selectedColorIndex = newSelection;
      slider1.setValue(red(lineColors[selectedColorIndex])); // set new red value
      slider2.setValue(green(lineColors[selectedColorIndex])); // set new green value
      slider3.setValue(blue(lineColors[selectedColorIndex])); // set new blue value
      redraw();  // refresh graph
    }
  } catch (NumberFormatException e) {}
} //_CODE_:textfield4:518793:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:285991:
  if (selectedColorIndex >= 0 && selectedColorIndex < lineColors.length) { // make sure index is valid
    lineColors[selectedColorIndex] = color(source.getValueF(), slider2.getValueF(), slider3.getValueF()); // update the color with new slider value
    redraw(); // refresh graph
  }
} //_CODE_:slider1:285991:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:383301:
  if (selectedColorIndex >= 0 && selectedColorIndex < lineColors.length) { // make sure index is valid
    lineColors[selectedColorIndex] = color(slider1.getValueF(), source.getValueF(), slider3.getValueF()); // update the color with new slider value
    redraw(); // refresh graph
  }
} //_CODE_:slider2:383301:

public void slider3_change1(GSlider source, GEvent event) { //_CODE_:slider3:761743:
  if (selectedColorIndex >= 0 && selectedColorIndex < lineColors.length) { // make sure index is valid
    lineColors[selectedColorIndex] = color(slider1.getValueF(), slider2.getValueF(), source.getValueF()); // update the color with new slider value
    redraw(); // refresh graph
  }
} //_CODE_:slider3:761743:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:713908:
  showGrid = !showGrid; // control togglability of grid
  redraw(); // refresh graph
} //_CODE_:button2:713908:

public void textfield5_change1(GTextField source, GEvent event) { //_CODE_:textfield5:296548:
  graphTitle = source.getText(); // set graph title to string
} //_CODE_:textfield5:296548:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:879985:
  showLegend = !showLegend;  // control togglability of legend
  redraw(); // refresh graph
} //_CODE_:button3:879985:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  Graph_Parameters = GWindow.getWindow(this, "Window title", 0, 0, 300, 350, JAVA2D);
  Graph_Parameters.noLoop();
  Graph_Parameters.setActionOnClose(G4P.KEEP_OPEN);
  Graph_Parameters.addDrawHandler(this, "win_draw1");
  Graph_Type = new GDropList(Graph_Parameters, 21, 36, 90, 80, 3, 10);
  Graph_Type.setItems(loadStrings("list_545584"), 0);
  Graph_Type.addEventHandler(this, "Graphs");
  label1 = new GLabel(Graph_Parameters, 25, 15, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Graph Type");
  label1.setOpaque(false);
  textfield1 = new GTextField(Graph_Parameters, 13, 98, 120, 30, G4P.SCROLLBARS_NONE);
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  textfield2 = new GTextField(Graph_Parameters, 153, 98, 120, 30, G4P.SCROLLBARS_NONE);
  textfield2.setOpaque(true);
  textfield2.addEventHandler(this, "textfield2_change1");
  label2 = new GLabel(Graph_Parameters, 31, 77, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("X-Axis Title");
  label2.setOpaque(false);
  label4 = new GLabel(Graph_Parameters, 172, 77, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Y-Axis Title");
  label4.setOpaque(false);
  button1 = new GButton(Graph_Parameters, 25, 301, 100, 30);
  button1.setText("Screenshot");
  button1.addEventHandler(this, "button1_click1");
  textfield3 = new GTextField(Graph_Parameters, 12, 162, 120, 30, G4P.SCROLLBARS_NONE);
  textfield3.setText("Line");
  textfield3.setOpaque(true);
  textfield3.addEventHandler(this, "textfield3_change1");
  label3 = new GLabel(Graph_Parameters, 29, 142, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Data File");
  label3.setOpaque(false);
  label5 = new GLabel(Graph_Parameters, 173, 142, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Data Set");
  label5.setOpaque(false);
  label6 = new GLabel(Graph_Parameters, 7, 195, 130, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Try: Line, Scatter, Bar");
  label6.setOpaque(false);
  textfield4 = new GTextField(Graph_Parameters, 154, 162, 120, 30, G4P.SCROLLBARS_NONE);
  textfield4.setText("1");
  textfield4.setPromptText("number of dataset");
  textfield4.setOpaque(true);
  textfield4.addEventHandler(this, "textfield4_change1");
  label7 = new GLabel(Graph_Parameters, 162, 205, 80, 15);
  label7.setText("Red");
  label7.setOpaque(false);
  label8 = new GLabel(Graph_Parameters, 162, 245, 80, 15);
  label8.setText("Green");
  label8.setOpaque(false);
  label9 = new GLabel(Graph_Parameters, 162, 286, 80, 15);
  label9.setText("Blue");
  label9.setOpaque(false);
  slider1 = new GSlider(Graph_Parameters, 162, 220, 100, 20, 10.0);
  slider1.setLimits(0.5, 0.0, 255.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  slider2 = new GSlider(Graph_Parameters, 162, 260, 100, 20, 10.0);
  slider2.setLimits(0.5, 0.0, 255.0);
  slider2.setNumberFormat(G4P.DECIMAL, 2);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  slider3 = new GSlider(Graph_Parameters, 162, 301, 100, 20, 10.0);
  slider3.setLimits(0.5, 0.0, 255.0);
  slider3.setNumberFormat(G4P.DECIMAL, 2);
  slider3.setOpaque(false);
  slider3.addEventHandler(this, "slider3_change1");
  button2 = new GButton(Graph_Parameters, 25, 227, 100, 30);
  button2.setText("Toggle Grid");
  button2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button2.addEventHandler(this, "button2_click1");
  textfield5 = new GTextField(Graph_Parameters, 153, 32, 120, 30, G4P.SCROLLBARS_NONE);
  textfield5.setOpaque(true);
  textfield5.addEventHandler(this, "textfield5_change1");
  label10 = new GLabel(Graph_Parameters, 173, 12, 80, 20);
  label10.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label10.setText("Graph Title");
  label10.setOpaque(false);
  button3 = new GButton(Graph_Parameters, 25, 264, 100, 30);
  button3.setText("Toggle Legend");
  button3.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  button3.addEventHandler(this, "button3_click1");
  Graph_Parameters.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow Graph_Parameters;
GDropList Graph_Type; 
GLabel label1; 
GTextField textfield1; 
GTextField textfield2; 
GLabel label2; 
GLabel label4; 
GButton button1; 
GTextField textfield3; 
GLabel label3; 
GLabel label5; 
GLabel label6; 
GTextField textfield4; 
GLabel label7; 
GLabel label8; 
GLabel label9; 
GSlider slider1; 
GSlider slider2; 
GSlider slider3; 
GButton button2; 
GTextField textfield5; 
GLabel label10; 
GButton button3; 
